# .goreleaser.yml
version: 2
project_name: f12

# Build configuration: Specifies how to build your Go application for different platforms.
builds:
  - id: f12-build # Unique ID for this build configuration
    binary: f12    # Output binary name (matches ENTRYPOINT in Dockerfile)
    main: ./cmd/f12              # Path to the main package (current directory)
    goos:                # Target Operating Systems
      - linux
    goarch:              # Target Architectures
      - amd64
      - arm64
      # - arm # You can add armv6, armv7 etc. if your Docker base image supports it
    # GOARM is needed if you build for arm (32-bit) and want to specify the ARM version
    # goarm:
    #   - "6"
    #   - "7"
    env:                 # Environment variables for the build
      - CGO_ENABLED=0
    ldflags:             # Linker flags
      - -s -w # Strips debug symbols and DWARF information to reduce binary size

# .goreleaser.yml
# ...
dockers:
  - ids: [f12-build]
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/myhops/f12:{{ .Tag }}-amd64" # Corrected
      - "ghcr.io/myhops/f12:latest-amd64"   # Corrected
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--push"  # <--- ADD THIS LINE
    # 'contents' can be empty or removed if using pre-compiled binary Dockerfile

  - ids: [f12-build]
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/myhops/f12:{{ .Tag }}-arm64" # Corrected
      - "ghcr.io/myhops/f12:latest-arm64"   # Corrected
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--push"  # <--- ADD THIS LINE
    # 'contents' can be empty or removed


# Docker Manifest configuration: Creates and pushes a multi-arch manifest list.
docker_manifests:
  - name_template: "ghcr.io/myhops/f12:{{ .Tag }}" # Manifest tag
    image_templates: # Images to include in this manifest
      - "ghcr.io/myhops/f12:{{ .Tag }}-amd64"
      - "ghcr.io/myhops/f12:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/myhops/f12:latest" # 'latest' manifest tag
    image_templates:
      - "ghcr.io/myhops/f12:latest-amd64"
      - "ghcr.io/myhops/f12:latest-arm64"

# Optional: Release configuration (e.g., for GitHub Releases)
release:
  github:
    owner: myhops
    name: envprops